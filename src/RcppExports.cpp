// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "graphml_types.h"
#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// getJT
Rcpp::List getJT(arma::umat EdgeMat);
RcppExport SEXP _graphml_getJT(SEXP EdgeMatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::umat >::type EdgeMat(EdgeMatSEXP);
    rcpp_result_gen = Rcpp::wrap(getJT(EdgeMat));
    return rcpp_result_gen;
END_RCPP
}
// log_exp_mc
arma::vec log_exp_mc(arma::umat G, arma::uvec nu, unsigned int b, arma::mat H, unsigned int check_H, unsigned int mc, unsigned int p);
RcppExport SEXP _graphml_log_exp_mc(SEXP GSEXP, SEXP nuSEXP, SEXP bSEXP, SEXP HSEXP, SEXP check_HSEXP, SEXP mcSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::umat >::type G(GSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type check_H(check_HSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type mc(mcSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(log_exp_mc(G, nu, b, H, check_H, mc, p));
    return rcpp_result_gen;
END_RCPP
}
// gnorm_c
double gnorm_c(arma::umat Adj, double b, arma::mat D, unsigned int iter);
RcppExport SEXP _graphml_gnorm_c(SEXP AdjSEXP, SEXP bSEXP, SEXP DSEXP, SEXP iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::umat >::type Adj(AdjSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type iter(iterSEXP);
    rcpp_result_gen = Rcpp::wrap(gnorm_c(Adj, b, D, iter));
    return rcpp_result_gen;
END_RCPP
}
// log_multi_gamma
double log_multi_gamma(int p, double n);
RcppExport SEXP _graphml_log_multi_gamma(SEXP pSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(log_multi_gamma(p, n));
    return rcpp_result_gen;
END_RCPP
}
// log_wishart_norm
double log_wishart_norm(int p, double b, arma::mat D);
RcppExport SEXP _graphml_log_wishart_norm(SEXP pSEXP, SEXP bSEXP, SEXP DSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    rcpp_result_gen = Rcpp::wrap(log_wishart_norm(p, b, D));
    return rcpp_result_gen;
END_RCPP
}
// gnormJT
double gnormJT(arma::umat Adj, arma::umat EdgeMat, double b, arma::mat D, int iter);
RcppExport SEXP _graphml_gnormJT(SEXP AdjSEXP, SEXP EdgeMatSEXP, SEXP bSEXP, SEXP DSEXP, SEXP iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::umat >::type Adj(AdjSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type EdgeMat(EdgeMatSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    rcpp_result_gen = Rcpp::wrap(gnormJT(Adj, EdgeMat, b, D, iter));
    return rcpp_result_gen;
END_RCPP
}
// erfcx
double erfcx(double x);
RcppExport SEXP _graphml_erfcx(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(erfcx(x));
    return rcpp_result_gen;
END_RCPP
}
// trunc_norm_moments
Rcpp::List trunc_norm_moments(arma::vec lb_in, arma::vec ub_in, arma::vec mu_in, arma::vec sigma_in);
RcppExport SEXP _graphml_trunc_norm_moments(SEXP lb_inSEXP, SEXP ub_inSEXP, SEXP mu_inSEXP, SEXP sigma_inSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type lb_in(lb_inSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ub_in(ub_inSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu_in(mu_inSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sigma_in(sigma_inSEXP);
    rcpp_result_gen = Rcpp::wrap(trunc_norm_moments(lb_in, ub_in, mu_in, sigma_in));
    return rcpp_result_gen;
END_RCPP
}
// ep_logz
double ep_logz(arma::vec m, arma::mat K, arma::vec lb, arma::vec ub);
RcppExport SEXP _graphml_ep_logz(SEXP mSEXP, SEXP KSEXP, SEXP lbSEXP, SEXP ubSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type m(mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lb(lbSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ub(ubSEXP);
    rcpp_result_gen = Rcpp::wrap(ep_logz(m, K, lb, ub));
    return rcpp_result_gen;
END_RCPP
}
// lse
double lse(arma::vec arr, int count);
RcppExport SEXP _graphml_lse(SEXP arrSEXP, SEXP countSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type arr(arrSEXP);
    Rcpp::traits::input_parameter< int >::type count(countSEXP);
    rcpp_result_gen = Rcpp::wrap(lse(arr, count));
    return rcpp_result_gen;
END_RCPP
}
// matrix2vector
arma::vec matrix2vector(arma::mat m, const bool byrow);
RcppExport SEXP _graphml_matrix2vector(SEXP mSEXP, SEXP byrowSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type m(mSEXP);
    Rcpp::traits::input_parameter< const bool >::type byrow(byrowSEXP);
    rcpp_result_gen = Rcpp::wrap(matrix2vector(m, byrow));
    return rcpp_result_gen;
END_RCPP
}
// getFreeElem
arma::mat getFreeElem(arma::mat G, u_int p);
RcppExport SEXP _graphml_getFreeElem(SEXP GSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type G(GSEXP);
    Rcpp::traits::input_parameter< u_int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(getFreeElem(G, p));
    return rcpp_result_gen;
END_RCPP
}
// getNonFreeElem
arma::mat getNonFreeElem(arma::mat G, u_int p, u_int n_nonfree);
RcppExport SEXP _graphml_getNonFreeElem(SEXP GSEXP, SEXP pSEXP, SEXP n_nonfreeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type G(GSEXP);
    Rcpp::traits::input_parameter< u_int >::type p(pSEXP);
    Rcpp::traits::input_parameter< u_int >::type n_nonfree(n_nonfreeSEXP);
    rcpp_result_gen = Rcpp::wrap(getNonFreeElem(G, p, n_nonfree));
    return rcpp_result_gen;
END_RCPP
}
// init_graph
Rcpp::List init_graph(arma::mat& G, u_int b, arma::mat& V);
RcppExport SEXP _graphml_init_graph(SEXP GSEXP, SEXP bSEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type G(GSEXP);
    Rcpp::traits::input_parameter< u_int >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(init_graph(G, b, V));
    return rcpp_result_gen;
END_RCPP
}
// evalPsi
arma::mat evalPsi(arma::mat samps, Rcpp::List& params);
RcppExport SEXP _graphml_evalPsi(SEXP sampsSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type samps(sampsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(evalPsi(samps, params));
    return rcpp_result_gen;
END_RCPP
}
// approxZ
arma::mat approxZ(arma::mat& G, u_int b, arma::mat& V);
RcppExport SEXP _graphml_approxZ(SEXP GSEXP, SEXP bSEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type G(GSEXP);
    Rcpp::traits::input_parameter< u_int >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(approxZ(G, b, V));
    return rcpp_result_gen;
END_RCPP
}
// calcMode
arma::vec calcMode(arma::mat u_df, Rcpp::List& params, double tol, u_int maxSteps, bool VERBOSE);
RcppExport SEXP _graphml_calcMode(SEXP u_dfSEXP, SEXP paramsSEXP, SEXP tolSEXP, SEXP maxStepsSEXP, SEXP VERBOSESEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type u_df(u_dfSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< u_int >::type maxSteps(maxStepsSEXP);
    Rcpp::traits::input_parameter< bool >::type VERBOSE(VERBOSESEXP);
    rcpp_result_gen = Rcpp::wrap(calcMode(u_df, params, tol, maxSteps, VERBOSE));
    return rcpp_result_gen;
END_RCPP
}
// approx_integral
double approx_integral(u_int K, arma::mat& psi_df, arma::mat& bounds, Rcpp::List& params);
RcppExport SEXP _graphml_approx_integral(SEXP KSEXP, SEXP psi_dfSEXP, SEXP boundsSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< u_int >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type psi_df(psi_dfSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type bounds(boundsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(approx_integral(K, psi_df, bounds, params));
    return rcpp_result_gen;
END_RCPP
}
// chol2vec
arma::vec chol2vec(arma::mat& M, u_int D);
RcppExport SEXP _graphml_chol2vec(SEXP MSEXP, SEXP DSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type M(MSEXP);
    Rcpp::traits::input_parameter< u_int >::type D(DSEXP);
    rcpp_result_gen = Rcpp::wrap(chol2vec(M, D));
    return rcpp_result_gen;
END_RCPP
}
// create_psi_mat_cpp
arma::mat create_psi_mat_cpp(arma::vec u, Rcpp::List& params);
RcppExport SEXP _graphml_create_psi_mat_cpp(SEXP uSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type u(uSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(create_psi_mat_cpp(u, params));
    return rcpp_result_gen;
END_RCPP
}
// psi_cpp
double psi_cpp(arma::vec& u, Rcpp::List& params);
RcppExport SEXP _graphml_psi_cpp(SEXP uSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type u(uSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(psi_cpp(u, params));
    return rcpp_result_gen;
END_RCPP
}
// psi_cpp_mat
double psi_cpp_mat(arma::mat& psi_mat, Rcpp::List& params);
RcppExport SEXP _graphml_psi_cpp_mat(SEXP psi_matSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type psi_mat(psi_matSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(psi_cpp_mat(psi_mat, params));
    return rcpp_result_gen;
END_RCPP
}
// grad_cpp
arma::vec grad_cpp(arma::vec& u, Rcpp::List& params);
RcppExport SEXP _graphml_grad_cpp(SEXP uSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type u(uSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cpp(u, params));
    return rcpp_result_gen;
END_RCPP
}
// grad_cpp_mat
arma::vec grad_cpp_mat(arma::mat& psi_mat, Rcpp::List& params);
RcppExport SEXP _graphml_grad_cpp_mat(SEXP psi_matSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type psi_mat(psi_matSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_cpp_mat(psi_mat, params));
    return rcpp_result_gen;
END_RCPP
}
// dpsi_cpp
double dpsi_cpp(u_int i, u_int j, arma::mat& psi_mat, Rcpp::List& params);
RcppExport SEXP _graphml_dpsi_cpp(SEXP iSEXP, SEXP jSEXP, SEXP psi_matSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< u_int >::type i(iSEXP);
    Rcpp::traits::input_parameter< u_int >::type j(jSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type psi_mat(psi_matSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(dpsi_cpp(i, j, psi_mat, params));
    return rcpp_result_gen;
END_RCPP
}
// dpsi_rsij
double dpsi_rsij(u_int r, u_int s, u_int i, u_int j, arma::mat& psi_mat, arma::mat& G);
RcppExport SEXP _graphml_dpsi_rsij(SEXP rSEXP, SEXP sSEXP, SEXP iSEXP, SEXP jSEXP, SEXP psi_matSEXP, SEXP GSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< u_int >::type r(rSEXP);
    Rcpp::traits::input_parameter< u_int >::type s(sSEXP);
    Rcpp::traits::input_parameter< u_int >::type i(iSEXP);
    Rcpp::traits::input_parameter< u_int >::type j(jSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type psi_mat(psi_matSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type G(GSEXP);
    rcpp_result_gen = Rcpp::wrap(dpsi_rsij(r, s, i, j, psi_mat, G));
    return rcpp_result_gen;
END_RCPP
}
// hess_cpp_test
arma::mat hess_cpp_test(arma::vec& u, Rcpp::List& params);
RcppExport SEXP _graphml_hess_cpp_test(SEXP uSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type u(uSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(hess_cpp_test(u, params));
    return rcpp_result_gen;
END_RCPP
}
// d2psi_ii
double d2psi_ii(u_int r, u_int s, u_int i, arma::mat& psi_mat);
RcppExport SEXP _graphml_d2psi_ii(SEXP rSEXP, SEXP sSEXP, SEXP iSEXP, SEXP psi_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< u_int >::type r(rSEXP);
    Rcpp::traits::input_parameter< u_int >::type s(sSEXP);
    Rcpp::traits::input_parameter< u_int >::type i(iSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type psi_mat(psi_matSEXP);
    rcpp_result_gen = Rcpp::wrap(d2psi_ii(r, s, i, psi_mat));
    return rcpp_result_gen;
END_RCPP
}
// hess_cpp
arma::mat hess_cpp(arma::vec& u, Rcpp::List& params);
RcppExport SEXP _graphml_hess_cpp(SEXP uSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type u(uSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(hess_cpp(u, params));
    return rcpp_result_gen;
END_RCPP
}
// hess_cpp_mat
arma::mat hess_cpp_mat(arma::mat& psi_mat, Rcpp::List& params);
RcppExport SEXP _graphml_hess_cpp_mat(SEXP psi_matSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type psi_mat(psi_matSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(hess_cpp_mat(psi_mat, params));
    return rcpp_result_gen;
END_RCPP
}
// d2
double d2(u_int i, u_int j, u_int k, u_int l, arma::mat& psi_mat, Rcpp::List& params);
RcppExport SEXP _graphml_d2(SEXP iSEXP, SEXP jSEXP, SEXP kSEXP, SEXP lSEXP, SEXP psi_matSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< u_int >::type i(iSEXP);
    Rcpp::traits::input_parameter< u_int >::type j(jSEXP);
    Rcpp::traits::input_parameter< u_int >::type k(kSEXP);
    Rcpp::traits::input_parameter< u_int >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type psi_mat(psi_matSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(d2(i, j, k, l, psi_mat, params));
    return rcpp_result_gen;
END_RCPP
}
// d2_rs
double d2_rs(u_int r, u_int s, u_int i, u_int j, u_int k, u_int l, arma::mat& psi_mat, arma::mat& G);
RcppExport SEXP _graphml_d2_rs(SEXP rSEXP, SEXP sSEXP, SEXP iSEXP, SEXP jSEXP, SEXP kSEXP, SEXP lSEXP, SEXP psi_matSEXP, SEXP GSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< u_int >::type r(rSEXP);
    Rcpp::traits::input_parameter< u_int >::type s(sSEXP);
    Rcpp::traits::input_parameter< u_int >::type i(iSEXP);
    Rcpp::traits::input_parameter< u_int >::type j(jSEXP);
    Rcpp::traits::input_parameter< u_int >::type k(kSEXP);
    Rcpp::traits::input_parameter< u_int >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type psi_mat(psi_matSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type G(GSEXP);
    rcpp_result_gen = Rcpp::wrap(d2_rs(r, s, i, j, k, l, psi_mat, G));
    return rcpp_result_gen;
END_RCPP
}
// xi
double xi(u_int i, u_int j, arma::mat& L);
RcppExport SEXP _graphml_xi(SEXP iSEXP, SEXP jSEXP, SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< u_int >::type i(iSEXP);
    Rcpp::traits::input_parameter< u_int >::type j(jSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type L(LSEXP);
    rcpp_result_gen = Rcpp::wrap(xi(i, j, L));
    return rcpp_result_gen;
END_RCPP
}
// grad_gwish
arma::vec grad_gwish(arma::mat& psi_mat, Rcpp::List& params);
RcppExport SEXP _graphml_grad_gwish(SEXP psi_matSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type psi_mat(psi_matSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_gwish(psi_mat, params));
    return rcpp_result_gen;
END_RCPP
}
// dpsi_ij
double dpsi_ij(u_int i, u_int j, arma::mat& psi_mat, Rcpp::List& params);
RcppExport SEXP _graphml_dpsi_ij(SEXP iSEXP, SEXP jSEXP, SEXP psi_matSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< u_int >::type i(iSEXP);
    Rcpp::traits::input_parameter< u_int >::type j(jSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type psi_mat(psi_matSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(dpsi_ij(i, j, psi_mat, params));
    return rcpp_result_gen;
END_RCPP
}
// test
int test();
RcppExport SEXP _graphml_test() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(test());
    return rcpp_result_gen;
END_RCPP
}
// dpsi
double dpsi(u_int r, u_int s, u_int i, u_int j, arma::mat& psi, Rcpp::List& params);
RcppExport SEXP _graphml_dpsi(SEXP rSEXP, SEXP sSEXP, SEXP iSEXP, SEXP jSEXP, SEXP psiSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< u_int >::type r(rSEXP);
    Rcpp::traits::input_parameter< u_int >::type s(sSEXP);
    Rcpp::traits::input_parameter< u_int >::type i(iSEXP);
    Rcpp::traits::input_parameter< u_int >::type j(jSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(dpsi(r, s, i, j, psi, params));
    return rcpp_result_gen;
END_RCPP
}
// hess_gwish
arma::mat hess_gwish(arma::mat& psi_mat, Rcpp::List& params);
RcppExport SEXP _graphml_hess_gwish(SEXP psi_matSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type psi_mat(psi_matSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(hess_gwish(psi_mat, params));
    return rcpp_result_gen;
END_RCPP
}
// d2psi_ijkl
double d2psi_ijkl(u_int i, u_int j, u_int k, u_int l, arma::mat& psi, Rcpp::List& params);
RcppExport SEXP _graphml_d2psi_ijkl(SEXP iSEXP, SEXP jSEXP, SEXP kSEXP, SEXP lSEXP, SEXP psiSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< u_int >::type i(iSEXP);
    Rcpp::traits::input_parameter< u_int >::type j(jSEXP);
    Rcpp::traits::input_parameter< u_int >::type k(kSEXP);
    Rcpp::traits::input_parameter< u_int >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(d2psi_ijkl(i, j, k, l, psi, params));
    return rcpp_result_gen;
END_RCPP
}
// d2psi
double d2psi(u_int r, u_int s, u_int i, u_int j, u_int k, u_int l, arma::mat& psi, Rcpp::List& params);
RcppExport SEXP _graphml_d2psi(SEXP rSEXP, SEXP sSEXP, SEXP iSEXP, SEXP jSEXP, SEXP kSEXP, SEXP lSEXP, SEXP psiSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< u_int >::type r(rSEXP);
    Rcpp::traits::input_parameter< u_int >::type s(sSEXP);
    Rcpp::traits::input_parameter< u_int >::type i(iSEXP);
    Rcpp::traits::input_parameter< u_int >::type j(jSEXP);
    Rcpp::traits::input_parameter< u_int >::type k(kSEXP);
    Rcpp::traits::input_parameter< u_int >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(d2psi(r, s, i, j, k, l, psi, params));
    return rcpp_result_gen;
END_RCPP
}
// g
arma::vec g(arma::mat& psi, Rcpp::List& params);
RcppExport SEXP _graphml_g(SEXP psiSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(g(psi, params));
    return rcpp_result_gen;
END_RCPP
}
// gg
double gg(u_int i, u_int j, arma::mat& psi, Rcpp::List& params);
RcppExport SEXP _graphml_gg(SEXP iSEXP, SEXP jSEXP, SEXP psiSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< u_int >::type i(iSEXP);
    Rcpp::traits::input_parameter< u_int >::type j(jSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(gg(i, j, psi, params));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_hello_world
arma::mat rcpparma_hello_world();
RcppExport SEXP _graphml_rcpparma_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpparma_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_outerproduct
arma::mat rcpparma_outerproduct(const arma::colvec& x);
RcppExport SEXP _graphml_rcpparma_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_outerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_innerproduct
double rcpparma_innerproduct(const arma::colvec& x);
RcppExport SEXP _graphml_rcpparma_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_innerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_bothproducts
Rcpp::List rcpparma_bothproducts(const arma::colvec& x);
RcppExport SEXP _graphml_rcpparma_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_bothproducts(x));
    return rcpp_result_gen;
END_RCPP
}
// rgw
arma::mat rgw(unsigned int J, Rcpp::List& obj);
RcppExport SEXP _graphml_rgw(SEXP JSEXP, SEXP objSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int >::type J(JSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type obj(objSEXP);
    rcpp_result_gen = Rcpp::wrap(rgw(J, obj));
    return rcpp_result_gen;
END_RCPP
}
// rwish_c
arma::mat rwish_c(arma::mat Ts, unsigned int b, unsigned int p);
RcppExport SEXP _graphml_rwish_c(SEXP TsSEXP, SEXP bSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Ts(TsSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type b(bSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(rwish_c(Ts, b, p));
    return rcpp_result_gen;
END_RCPP
}
// rgwish_c
arma::mat rgwish_c(arma::mat G, arma::mat Ts, unsigned int b, unsigned int p, double threshold_c);
RcppExport SEXP _graphml_rgwish_c(SEXP GSEXP, SEXP TsSEXP, SEXP bSEXP, SEXP pSEXP, SEXP threshold_cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type G(GSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Ts(TsSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type b(bSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type threshold_c(threshold_cSEXP);
    rcpp_result_gen = Rcpp::wrap(rgwish_c(G, Ts, b, p, threshold_c));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_graphml_getJT", (DL_FUNC) &_graphml_getJT, 1},
    {"_graphml_log_exp_mc", (DL_FUNC) &_graphml_log_exp_mc, 7},
    {"_graphml_gnorm_c", (DL_FUNC) &_graphml_gnorm_c, 4},
    {"_graphml_log_multi_gamma", (DL_FUNC) &_graphml_log_multi_gamma, 2},
    {"_graphml_log_wishart_norm", (DL_FUNC) &_graphml_log_wishart_norm, 3},
    {"_graphml_gnormJT", (DL_FUNC) &_graphml_gnormJT, 5},
    {"_graphml_erfcx", (DL_FUNC) &_graphml_erfcx, 1},
    {"_graphml_trunc_norm_moments", (DL_FUNC) &_graphml_trunc_norm_moments, 4},
    {"_graphml_ep_logz", (DL_FUNC) &_graphml_ep_logz, 4},
    {"_graphml_lse", (DL_FUNC) &_graphml_lse, 2},
    {"_graphml_matrix2vector", (DL_FUNC) &_graphml_matrix2vector, 2},
    {"_graphml_getFreeElem", (DL_FUNC) &_graphml_getFreeElem, 2},
    {"_graphml_getNonFreeElem", (DL_FUNC) &_graphml_getNonFreeElem, 3},
    {"_graphml_init_graph", (DL_FUNC) &_graphml_init_graph, 3},
    {"_graphml_evalPsi", (DL_FUNC) &_graphml_evalPsi, 2},
    {"_graphml_approxZ", (DL_FUNC) &_graphml_approxZ, 3},
    {"_graphml_calcMode", (DL_FUNC) &_graphml_calcMode, 5},
    {"_graphml_approx_integral", (DL_FUNC) &_graphml_approx_integral, 4},
    {"_graphml_chol2vec", (DL_FUNC) &_graphml_chol2vec, 2},
    {"_graphml_create_psi_mat_cpp", (DL_FUNC) &_graphml_create_psi_mat_cpp, 2},
    {"_graphml_psi_cpp", (DL_FUNC) &_graphml_psi_cpp, 2},
    {"_graphml_psi_cpp_mat", (DL_FUNC) &_graphml_psi_cpp_mat, 2},
    {"_graphml_grad_cpp", (DL_FUNC) &_graphml_grad_cpp, 2},
    {"_graphml_grad_cpp_mat", (DL_FUNC) &_graphml_grad_cpp_mat, 2},
    {"_graphml_dpsi_cpp", (DL_FUNC) &_graphml_dpsi_cpp, 4},
    {"_graphml_dpsi_rsij", (DL_FUNC) &_graphml_dpsi_rsij, 6},
    {"_graphml_hess_cpp_test", (DL_FUNC) &_graphml_hess_cpp_test, 2},
    {"_graphml_d2psi_ii", (DL_FUNC) &_graphml_d2psi_ii, 4},
    {"_graphml_hess_cpp", (DL_FUNC) &_graphml_hess_cpp, 2},
    {"_graphml_hess_cpp_mat", (DL_FUNC) &_graphml_hess_cpp_mat, 2},
    {"_graphml_d2", (DL_FUNC) &_graphml_d2, 6},
    {"_graphml_d2_rs", (DL_FUNC) &_graphml_d2_rs, 8},
    {"_graphml_xi", (DL_FUNC) &_graphml_xi, 3},
    {"_graphml_grad_gwish", (DL_FUNC) &_graphml_grad_gwish, 2},
    {"_graphml_dpsi_ij", (DL_FUNC) &_graphml_dpsi_ij, 4},
    {"_graphml_test", (DL_FUNC) &_graphml_test, 0},
    {"_graphml_dpsi", (DL_FUNC) &_graphml_dpsi, 6},
    {"_graphml_hess_gwish", (DL_FUNC) &_graphml_hess_gwish, 2},
    {"_graphml_d2psi_ijkl", (DL_FUNC) &_graphml_d2psi_ijkl, 6},
    {"_graphml_d2psi", (DL_FUNC) &_graphml_d2psi, 8},
    {"_graphml_g", (DL_FUNC) &_graphml_g, 2},
    {"_graphml_gg", (DL_FUNC) &_graphml_gg, 4},
    {"_graphml_rcpparma_hello_world", (DL_FUNC) &_graphml_rcpparma_hello_world, 0},
    {"_graphml_rcpparma_outerproduct", (DL_FUNC) &_graphml_rcpparma_outerproduct, 1},
    {"_graphml_rcpparma_innerproduct", (DL_FUNC) &_graphml_rcpparma_innerproduct, 1},
    {"_graphml_rcpparma_bothproducts", (DL_FUNC) &_graphml_rcpparma_bothproducts, 1},
    {"_graphml_rgw", (DL_FUNC) &_graphml_rgw, 2},
    {"_graphml_rwish_c", (DL_FUNC) &_graphml_rwish_c, 3},
    {"_graphml_rgwish_c", (DL_FUNC) &_graphml_rgwish_c, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_graphml(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
